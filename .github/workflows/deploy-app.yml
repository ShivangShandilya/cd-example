name: Publish docker image, push into the catalog and update the deployed application
# Uncommment thi to launch the workflow manually.
#on: workflow_dispatch
on:
  push:
    branches: [main]
env:
  PLAYGROUND_PAT: ${{ secrets.PLAYGROUND_PAT}}
jobs:
  build:
    name: Push docker images
    runs-on: ubuntu-latest
    steps:
      - name: Set up Go 1.x
        uses: actions/setup-go@v2
        with:
          go-version: ^1.15
      - name: Check out code into the Go module directory
        uses: actions/checkout@v2
      # Docker Login
      - name: Docker Login
        uses: docker/login-action@v1
        with:
          username: ${{secrets.DOCKER_HUB_USER}}
          password: ${{secrets.DOCKER_HUB_TOKEN}}
      
      # Build and push docker images
      - name: Build and push Docker images
        run: make docker-push
        env:
          TARGET_DOCKER_REGISTRY: napptive
      
      # Build k8s yaml
      - name: Render Kubernetes OAM files
        run: make k8s
        env:
          TARGET_DOCKER_REGISTRY: napptive  

      # Create a cache  
      - name: Uploading manifest
        id: cache-k8s
        uses: actions/cache@v2
        with:
          key: k8s-yaml-${{ github.sha }}
          path: ./build/*
      
  check-app:
    needs: build
    name: Check if the app are deployed
    runs-on: ubuntu-latest
    outputs:
      not-found: ${{ steps.not-found.outputs.not-found }}
      found: ${{ steps.found.outputs.found }}
    
    steps:
      - name: Check if the app exists        
        uses: napptive-actions/playground-github-action@v2.2.4
        continue-on-error: true
        id: check
        with:
          cmd: "apps info cd-example"

      - name: Set App not found
        id: not-found
        run: echo '::set-output name=not-found::true'
        if: steps.check.outcome != 'success'

      - name: Set App found
        id: found
        run: echo '::set-output name=found::true'
        if: steps.check.outcome != 'failure'

  push-to-catalog:
    needs: build
    name: Push the application to the catalog
    runs-on: ubuntu-latest
    steps:
    - name: Check out code into the Go module directory
      uses: actions/checkout@v2

    - name: Get k8sfiles
      uses: actions/cache@v2
      id: cache-k8s
      with:
        path: ./build/*
        key: k8s-yaml-${{ github.sha }}

    - name: Get Version
      id: version
      run: echo "::set-output name=version::$(cat version)"
    
    - name: Push the application on the catalog
      uses: napptive-actions/catalog-push-action@v2.2.4
      with:
        applicationPath: ./build/k8s/
        namespace: "napptive"
        applicationName: "cd-example"
        tag: ${{ steps.version.outputs.version }}

  update-app:
    name: Update application
    needs: check-app
    runs-on: ubuntu-latest
    if: ${{needs.check-app.outputs.found == 'true'}}
    steps:     

    - name: Check out code into the Go module directory
      uses: actions/checkout@v2
    
    - name: Get k8sfiles
      uses: actions/cache@v2
      id: cache-k8s
      with:
        path: ./build/
        key: k8s-yaml-${{ github.sha }}
    
    # if the application aready exists -> update it
    - name: Make scripts executable
      run: chmod +x ./scripts/*.sh

    - name: Get Kubeconfig      
      uses: napptive-actions/playground-github-action@v2.2.4
      with:
        cmd: "get-kubeconfig" 

    # Get version
    - name: Get Version
      id: version
      run: echo "::set-output name=version::$(cat version)"
    
    - name: Deploy new version of the application
      run: ./scripts/update.sh
      env:
        TARGET_DOCKER_REGISTRY: napptive
        VERSION: ${{ steps.version.outputs.version }}

  deploy-app:
    name: Deploy application
    needs: check-app
    runs-on: ubuntu-latest
    if: ${{needs.check-app.outputs.not-found == 'true'}}
    steps: 

    - name: Check out code into the Go module directory
      uses: actions/checkout@v2

    - name: Get k8sfiles
      uses: actions/cache@v2
      id: cache-k8s
      with:
        path: ./build/*
        key: k8s-yaml-${{ github.sha }}

    # create it!
    - name: Deploy the app       
      uses: napptive-actions/playground-github-action@v2.2.4
      with:
        cmd: "apps deploy ./build/k8s/" 
  